"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[643],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return p}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(n),p=a,h=u["".concat(c,".").concat(p)]||u[p]||d[p]||r;return n?i.createElement(h,l(l({ref:t},m),{},{components:n})):i.createElement(h,l({ref:t},m))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2777:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),l=["components"],o={sidebar_position:3},c="Metrics",s={unversionedId:"reference/metrics",id:"reference/metrics",isDocsHomePage:!1,title:"Metrics",description:"How metrics look like",source:"@site/docs/reference/metrics.md",sourceDirName:"reference",slug:"/reference/metrics",permalink:"/re-data/docs/reference/metrics",editUrl:"https://github.com/re-data/re-data/edit/master/docs/docs/reference/metrics.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Config",permalink:"/re-data/docs/reference/config"},next:{title:"Models",permalink:"/re-data/docs/reference/models"}},m=[{value:"How metrics look like",id:"how-metrics-look-like",children:[]},{value:"Time based",id:"time-based",children:[]},{value:"Build-in metrics",id:"build-in-metrics",children:[{value:"Table level metrics",id:"table-level-metrics",children:[]},{value:"Column level metrics",id:"column-level-metrics",children:[]}]},{value:"Defining your metric",id:"defining-your-metric",children:[]},{value:"Your metric ideas",id:"your-metric-ideas",children:[]}],d={toc:m};function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"metrics"},"Metrics"),(0,r.kt)("h2",{id:"how-metrics-look-like"},"How metrics look like"),(0,r.kt)("p",null,"re_data metrics are currently ",(0,r.kt)("em",{parentName:"p"},"just")," expressions which\nare added to select statements run automatically by re_data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="re_data query"',title:'"re_data','query"':!0},"select metrcic1, metrcic2, metrcic3\nfrom your_table\nwhere data in time_window\n")),(0,r.kt)("p",null,"These simple definitions still make it possible to create a wide variety of metrics.\nIf metrics you would like to monitor are more complicated than that, we advise creating dbt models filtering/joining/grouping data and monitoring models created with re_data."),(0,r.kt)("h2",{id:"time-based"},"Time based"),(0,r.kt)("p",null,"re_data metrics are time-based. (re_data filters all your table data to a specific time window.) You can choose any time window with proper ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/docs/reference/config"},"config")),"."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Why do we only support time-based metrics? We believe all datasets gain in quality when they have some time-based column (think ",(0,r.kt)("inlineCode",{parentName:"p"},"creation_time"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ingestion_time"),", etc.) added to them. This way you know when data is coming, or when it was created, etc. Without a time-based mark, it's quite hard to define metrics & anomalies properly. Let us know if you think for your use-case it doesn't make sense."))),(0,r.kt)("h2",{id:"build-in-metrics"},"Build-in metrics"),(0,r.kt)("p",null,"Build-in metrics are default computed for all monitored tables. They can be either:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"table-level - metric for the whole table"),(0,r.kt)("li",{parentName:"ul"},"column level - metric for a specific column in the table")),(0,r.kt)("p",null,"Almost all metrics can be found in the ",(0,r.kt)("inlineCode",{parentName:"p"},"re_data_metrics")," model crated by re_data.\nApart from that re_data also creates models from specific metrics (As views filtering from metrics table)"),(0,r.kt)("p",null,"List of all currently available metrics:"),(0,r.kt)("h3",{id:"table-level-metrics"},"Table level metrics"),(0,r.kt)("h4",{id:"row_count"},"row_count"),(0,r.kt)("p",null,"Numbers of rows added to the table in a specific time range."),(0,r.kt)("h4",{id:"freshness"},"freshness"),(0,r.kt)("p",null,"Information about the oldest record which appeared in table.\n",(0,r.kt)("inlineCode",{parentName:"p"},"null")," in case of no data appearing in monitored time-widow."),(0,r.kt)("h4",{id:"schema_changes"},"schema_changes"),(0,r.kt)("p",null,"Information about schema changes in the monitored table."),(0,r.kt)("p",null,"Stored separately from the rest of the metrics in the ",(0,r.kt)("inlineCode",{parentName:"p"},"re_data_schema_changes")," model."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Schema changes are metric different from the rest.\nBecause information about schema changes is gathered by comparing schemas\nbetween re_data runs this metric ",(0,r.kt)("strong",{parentName:"p"},"doesn't")," filter changes to time-window specified and\nin fact, ",(0,r.kt)("strong",{parentName:"p"},"doesn't")," use time_window settings at all."))),(0,r.kt)("h3",{id:"column-level-metrics"},"Column level metrics"),(0,r.kt)("h4",{id:"min"},"min"),(0,r.kt)("p",null,"Minimal value appearing in a given column."),(0,r.kt)("h4",{id:"max"},"max"),(0,r.kt)("p",null,"Maximal value appearing in a given column."),(0,r.kt)("h4",{id:"avg"},"avg"),(0,r.kt)("p",null,"Average of all values appearing in a given column."),(0,r.kt)("h4",{id:"stddev"},"stddev"),(0,r.kt)("p",null,"The standard deviation of all values appearing in a given column."),(0,r.kt)("h4",{id:"variance"},"variance"),(0,r.kt)("p",null,"The variance of all values appearing in a given column."),(0,r.kt)("h4",{id:"nulls_count"},"nulls_count"),(0,r.kt)("p",null,"A number of nulls in a given column."),(0,r.kt)("h4",{id:"min_length"},"min_length"),(0,r.kt)("p",null,"Minimal length of all strings appearing in a given column."),(0,r.kt)("h4",{id:"max_length"},"max_length"),(0,r.kt)("p",null,"Maximal length of all strings appearing in a given column"),(0,r.kt)("h4",{id:"avg_length"},"avg_length"),(0,r.kt)("p",null,"The average length of all strings appearing in a given column"),(0,r.kt)("h4",{id:"missing_count"},"missing_count"),(0,r.kt)("p",null,"A number of nulls and empty string values in a given column for the specific time range."),(0,r.kt)("h2",{id:"defining-your-metric"},"Defining your metric"),(0,r.kt)("p",null,"Defining your own metric is very easy.\nYou can create both table-level or column-level metrics."),(0,r.kt)("p",null,"Metrics can be defined in any place in your dbt project, as macros with names following the pattern: ",(0,r.kt)("inlineCode",{parentName:"p"},"re_data_metric_(your_name)")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Table level metrics take (optional) time_column argument."),(0,r.kt)("li",{parentName:"ul"},"Column level metrics take the column_name argument which needs to be used.")),(0,r.kt)("p",null,"Here are examples of custom metrics (one table, one column level)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="macros/my_metrics.sql"',title:'"macros/my_metrics.sql"'},"{% macro re_data_metric_buy_count(time_column) %}\n    coalesce(\n        sum(\n            case when event_type = 'buy'\n                then 1\n            else 0\n            end\n        ), 0\n    )\n{% endmacro %}\n\n{% macro re_data_metric_distinct_count(column_name) %}\n    count(distinct( {{column_name}} ))\n{% endmacro %}\n")),(0,r.kt)("p",null,"Import difference between table and column level metrics is."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Table level metrics reference column names directly."),(0,r.kt)("li",{parentName:"ul"},"Column level metrics reference it thought ",(0,r.kt)("inlineCode",{parentName:"li"},"column_name")," variable. (Which makes them more re-usable)")),(0,r.kt)("h2",{id:"your-metric-ideas"},"Your metric ideas"),(0,r.kt)("p",null,"Currently, all build-in metrics are also computed by default, but we intend to add metrics that will be build-in but optional (",(0,r.kt)("inlineCode",{parentName:"p"},"distinct_count")," being an example of such metric). If you have other suggestions of such metrics let us know on ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://www.re-data.io/slack"},"Slack! \ud83d\ude0a"))))}u.isMDXComponent=!0}}]);